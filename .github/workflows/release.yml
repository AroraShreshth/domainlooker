name: Release & Publish

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major
      dry_run:
        description: 'Dry run (do not publish)'
        required: false
        default: false
        type: boolean

permissions:
  contents: write
  packages: write
  pull-requests: read

jobs:
  validate-release:
    name: Validate Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run full test suite
      run: |
        npm run build
        npm run test:core
        
    - name: Security audit
      run: npm audit --audit-level=moderate
      
    - name: Validate package
      run: npm run prepublishOnly

  publish-npm:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: validate-release
    if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && !inputs.dry_run)
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Configure git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
    - name: Bump version (manual trigger)
      if: github.event_name == 'workflow_dispatch'
      run: |
        npm version ${{ inputs.version_type }} --no-git-tag-version
        echo "NEW_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
        
    - name: Update version in source files
      if: github.event_name == 'workflow_dispatch'
      run: |
        # Update version in CLI
        sed -i 's/\.version.*/.version('\''${{ env.NEW_VERSION }}'\'');/' src/index.ts
        
    - name: Build for production
      run: npm run build
      
    - name: Run pre-publish checks
      run: npm run prepublishOnly
      
    - name: Publish to npm
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Create git tag (manual trigger)
      if: github.event_name == 'workflow_dispatch'
      run: |
        git add .
        git commit -m "chore: bump version to ${{ env.NEW_VERSION }}"
        git tag "v${{ env.NEW_VERSION }}"
        git push origin main --tags
        
    - name: Generate release notes
      if: github.event_name == 'workflow_dispatch'
      run: |
        echo "## 🚀 DOMAINLOOKER v${{ env.NEW_VERSION }}" > release-notes.md
        echo "" >> release-notes.md
        echo "### 🎯 What's New" >> release-notes.md
        echo "" >> release-notes.md
        echo "Professional domain intelligence gathering CLI tool with comprehensive analysis capabilities." >> release-notes.md
        echo "" >> release-notes.md
        echo "### ✨ Features" >> release-notes.md
        echo "- 🔍 **WHOIS Analysis** - Complete domain registration intelligence" >> release-notes.md
        echo "- 🌐 **DNS Investigation** - Comprehensive DNS record analysis (A, AAAA, MX, NS, TXT, SOA)" >> release-notes.md
        echo "- 🔒 **SSL Certificate Inspection** - Certificate validation and expiry monitoring" >> release-notes.md
        echo "- 🔥 **Network Scanning** - Port discovery and service identification" >> release-notes.md
        echo "- 🕸️ **Subdomain Discovery** - Advanced subdomain enumeration techniques" >> release-notes.md
        echo "- 📊 **Export Options** - CSV and JSON export with API-ready schemas" >> release-notes.md
        echo "- ⚠️ **Threat Assessment** - Automated security risk evaluation" >> release-notes.md
        echo "- 🎯 **Batch Processing** - Multiple domain analysis with parallel processing" >> release-notes.md
        echo "" >> release-notes.md
        echo "### 📦 Installation" >> release-notes.md
        echo "\`\`\`bash" >> release-notes.md
        echo "npm install -g domainlooker@${{ env.NEW_VERSION }}" >> release-notes.md
        echo "\`\`\`" >> release-notes.md
        echo "" >> release-notes.md
        echo "### 🚀 Quick Start" >> release-notes.md
        echo "\`\`\`bash" >> release-notes.md
        echo "# Single domain analysis" >> release-notes.md
        echo "domainlooker example.com" >> release-notes.md
        echo "" >> release-notes.md
        echo "# Multiple domains with subdomain discovery" >> release-notes.md
        echo "domainlooker google.com github.com --subdomains" >> release-notes.md
        echo "" >> release-notes.md
        echo "# Export results to JSON" >> release-notes.md
        echo "domainlooker example.com --export-json report.json" >> release-notes.md
        echo "\`\`\`" >> release-notes.md
        echo "" >> release-notes.md
        echo "### 🔗 Links" >> release-notes.md
        echo "- 📖 [Documentation](https://github.com/${{ github.repository }}#readme)" >> release-notes.md
        echo "- 📦 [npm Package](https://www.npmjs.com/package/domainlooker)" >> release-notes.md
        echo "- 🐛 [Report Issues](https://github.com/${{ github.repository }}/issues)" >> release-notes.md
        echo "- 🤝 [Contributing Guide](https://github.com/${{ github.repository }}/blob/main/CONTRIBUTING.md)" >> release-notes.md
        echo "" >> release-notes.md
        echo "### 🛠️ Requirements" >> release-notes.md
        echo "- Node.js 16.0.0 or higher" >> release-notes.md
        echo "- Internet connection for domain lookups" >> release-notes.md
        echo "" >> release-notes.md
        echo "---" >> release-notes.md
        echo "**Made with ❤️ for the cybersecurity and developer community**" >> release-notes.md
        
    - name: Create GitHub Release (manual trigger)
      if: github.event_name == 'workflow_dispatch'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create "v${{ env.NEW_VERSION }}" \
          --title "🕵️ DOMAINLOOKER v${{ env.NEW_VERSION }}" \
          --notes-file release-notes.md \
          --latest

  dry-run-publish:
    name: Dry Run Publish
    runs-on: ubuntu-latest
    needs: validate-release
    if: github.event_name == 'workflow_dispatch' && inputs.dry_run
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Bump version (dry run)
      run: |
        npm version ${{ inputs.version_type }} --no-git-tag-version
        echo "Would publish version: $(node -p "require('./package.json').version")"
        
    - name: Build project
      run: npm run build
      
    - name: Simulate publish
      run: |
        echo "🔍 Dry run - would publish with these contents:"
        npm pack --dry-run
        echo "✅ Dry run completed successfully"

  post-publish:
    name: Post-Publish Tasks
    runs-on: ubuntu-latest
    needs: publish-npm
    if: success()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Notify success
      run: |
        echo "🎉 Successfully published DOMAINLOOKER to npm!"
        echo "📦 Package: https://www.npmjs.com/package/domainlooker"
        echo "📚 Documentation: https://github.com/${{ github.repository }}"
        
    - name: Update package stats
      run: |
        echo "📊 Package Statistics:" > publish-stats.md
        echo "- Published at: $(date)" >> publish-stats.md
        echo "- GitHub Repository: ${{ github.repository }}" >> publish-stats.md
        echo "- npm Package: https://www.npmjs.com/package/domainlooker" >> publish-stats.md
        echo "- License: MIT" >> publish-stats.md
        
    - name: Archive publish stats
      uses: actions/upload-artifact@v4
      with:
        name: publish-stats
        path: publish-stats.md
        retention-days: 90